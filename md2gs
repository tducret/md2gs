#!/bin/sh

# A wrapper script for invoking a docker container
# Based on https://spin.atomicobject.com/2015/11/30/command-line-tools-docker/

DOCKER_IMAGE="thibdct/md2gs"
LOCAL_CREDENTIAL_FILE_PATH="$HOME/.credentials/md2gslides.json"

error(){
  error_code=$1
  echo "ERROR: $2" >&2
  exit $1
}
check_cmd_in_path(){
  cmd=$1
  which $cmd > /dev/null 2>&1 || error 1 "$cmd not found!"
}
create_file_if_not_existing(){
  FILE=$1
  if [ ! -f $FILE ]; then
    mkdir -p "$(dirname "${FILE}")"
    touch "${FILE}"
fi
}
check_presentation_file_exists()
{
  FILE=$1
  if [ ! -f $FILE ]; then
    echo "\"${FILE}\" is not a valid file"
    echo "The last parameter of the command must be the markdown file"
    echo "Example : $0 [OPTIONS] presentation.md"
    exit 2
  fi
}
get_absolute_path()
{
  REL_FILE_PATH=$1
  REL_DIRNAME=`dirname ${REL_FILE_PATH}`
  echo `cd "${REL_DIRNAME}"; pwd`
}
upgrade(){
  docker pull $DOCKER_IMAGE
  exit 1
}
uninstall(){
  read -p "Are you sure to uninstall (y/n)? " -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    docker rmi $DOCKER_IMAGE
    rm $0
  fi
  exit 1
}
help(){
  echo "md2gs is a Docker container embedding md2gslides (a cool program to convert a Markdown file to Google slides)"
  echo "More information on https://github.com/gsuitedevs/md2googleslides"
  echo "usage: md2gs --title \"Greatest presentation ever\" path/to/my_presentation.md"
  echo
  echo " To upgrade md2gs to the latest version: md2gs --upgrade"
  echo " To remove the Docker image and delete md2gs script: md2gs --uninstall"
  echo
  echo "Here is the full md2gslides help (just remember to replace md2gslides with md2gs to use it) :"
  echo
  exec docker run -it $DOCKER_IMAGE --help
}

# Checks for dependencies
check_cmd_in_path docker

if [ "$#" -eq 0 ]; then
  echo "Error: you must add the path of a markdown presentation file"
  echo
  help
  exit 2
fi

case $1 in
  --uninstall)
  uninstall
  ;;
  --upgrade)
  upgrade
  ;;
  -h|--help)
  help
  ;;
esac

LAST_CMD_PARAM="${@: -1}"
check_presentation_file_exists $LAST_CMD_PARAM
# Remove the presentation path from $@ (to replace it with the proper path available in the container)
set -- "${@:1:$(($#-1))}"

PRESENTATION_FILENAME=`basename ${LAST_CMD_PARAM}`
PRESENTATION_HOST_DIR=$(get_absolute_path ${LAST_CMD_PARAM}) # Absolute path needed to attach Docker volume

# Create a credentials file on the host (if not existing yet)
create_file_if_not_existing $LOCAL_CREDENTIAL_FILE_PATH

# Run our containerized command
exec docker run --rm -it -v ${LOCAL_CREDENTIAL_FILE_PATH}:/home/.credentials/md2gslides.json -v $PRESENTATION_HOST_DIR:/presentation/ $DOCKER_IMAGE -n "$@" /presentation/$PRESENTATION_FILENAME